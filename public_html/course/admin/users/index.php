<?php
require_once( '../../common/config.ini' ); require_once( '../../common/users.php' ); session_start(); $usersObj = new users(); if( $usersObj->get_auth_session( $_SESSION, $user )) { if( $usersObj->db_login( $user['email'], $user['password'], $auth=ADMIN_ROLL, $user )) { session_regenerate_id( TRUE ); } else { $userObj->session_dell(); } } else { header( 'Location:'.URL.'/admin/' ); } if( $_SERVER['REQUEST_METHOD'] == 'POST' || $_SERVER['REQUEST_METHOD'] == 'GET' ) { $usersObj->get_data($_REQUEST, $form_data); (!isset($form_data['status'])) ? $form_data['status'] = '':NULL; (!isset($form_data['email'])) ? $form_data['email'] = '':NULL; (!isset($form_data['name'])) ? $form_data['name'] = '':NULL; (!isset($form_data['order_no'])) ? $form_data['order_no'] = '':NULL; $form_data['scenario_id'] = SCENARIOS_ID; $settings = $usersObj->get_settings(); } switch ($form_data['status']) { case 'user_search': $data_all = $usersObj->count_users( SCENARIOS_ID ); if( $data_all == 0 ) { $message = "ユーザーが登録されていません。"; $form_data['status'] = 'default'; require_once( 'list.php' ); return; } $form_data['scenario_id'] = SCENARIOS_ID; $form_data['auth'] = FLG_NORMAL; if( !empty( $form_data['email'] ) & !empty( $form_data['name'] ) & !empty( $form_data['order_no'] )) { $usersObj->search_email_name_order( $form_data, $data ); } elseif( !empty( $form_data['email'] ) & !empty( $form_data['name'] )) { $usersObj->search_email_name( $form_data, $data ); } elseif( !empty( $form_data['email'] ) & !empty( $form_data['order_no'] )) { $usersObj->search_email_order( $form_data, $data ); } elseif( !empty( $form_data['email'] )) { $usersObj->search_email( $form_data, $data ); } elseif( !empty( $form_data['name'] ) & !empty( $form_data['order_no'] )) { $usersObj->search_name_order( $form_data, $data ); } elseif( !empty( $form_data['name'] )) { $usersObj->search_name( $form_data, $data ); } elseif( !empty( $form_data['order_no'] )) { $usersObj->search_order( $form_data, $data ); } else { $usersObj->get_all_user( $data ); } $data_all = count( $data ); require_once( 'list.php'); break; case 'add': require_once( 'add_user.php'); break; case 'user_add': if( $_SERVER['REQUEST_METHOD'] == 'POST' ) { $form_data['user_password'] = $settings['user_password']; $result = $usersObj->txtImport( $form_data ); } $data_all = $usersObj->count_users( SCENARIOS_ID ); if( $data_all > 0 ) { $usersObj->get_all_user( $data ); } else { $err['user'] = "ユーザーが登録されていません。"; } require_once( 'add_user.php'); break; case 'edit': $usersObj->db_set_user( $form_data['id'] ); $data = $usersObj->db_get_user(); $usersObj->get_send_date( $form_data['id'], $send_date ); $data['story_no'] = $send_date['story_no']; require_once( 'edit_user.php'); break; case 'user_edit': if( $_SERVER['REQUEST_METHOD'] == 'POST' ) { $usersObj->check_mailadd( $form_data['email'] ); $usersObj->check_word_count( $form_data['firstname'], 32 ); if( !empty( $form_data['lastname'] )) { $usersObj->check_word_count( $form_data['lastname'], 32 ); } $err = $usersObj->get_err(); if( empty( $err )) { $usersObj->db_update_users( $form_data, $form_data['id'] ); $message = 'ユーザー情報を更新しました。'; } $data = $form_data; require_once( 'edit_user.php'); } break; case 'password': require_once( 'edit_pw.php'); break; case 'user_password': if( $_SERVER['REQUEST_METHOD'] == 'POST' ) { if( $settings == FALSE ) { $err['all'] = "設定情報にエラーが見つかりました。恐れ入りますがもう一度基本設定をして下さい。"; require_once( 'list.php'); return; } $usersObj->check_pw( $form_data['user_password'] ); $err = $usersObj->get_err(); if( empty( $err ) && ( $form_data['user_password'] != $settings['user_password'] )) { $usersObj->db_update_setting_user_password( $form_data, $settings['id'] ); $usersObj->db_update_all_password( $form_data ); $settings['user_password'] = $form_data['user_password']; $message = 'パスワードの更新をしました。'; require_once( 'edit_pw.php'); } require_once( 'edit_pw.php'); } break; case 'form_password': if( $_SERVER['REQUEST_METHOD'] == 'POST' ) { if( $settings == FALSE ) { $err['all'] = "設定情報にエラーが見つかりました。恐れ入りますがもう一度基本設定をして下さい。"; require_once( 'list.php'); return; } $usersObj->check_pw( $form_data['form_password'] ); $err1 = $usersObj->get_err(); if( empty( $err1 )) { $usersObj->db_update_setting_form_password( $form_data, $settings['id'] ); $settings['form_password'] = $form_data['form_password']; $settings['form_is_password'] = $form_data['form_is_password']; $message1 = 'パスワードの更新をしました。'; require_once( 'edit_pw.php'); } require_once( 'edit_pw.php'); } break; case 'user_delete': if( $_SERVER['REQUEST_METHOD'] == 'POST' ) { if( !$usersObj->db_is_admin( $form_data['id'] )) { $usersObj->db_delete_user( $form_data['id'] ); } header( 'Location:'.URL.'/admin/users/' ); } break; case 'user_csv': if( $_SERVER['REQUEST_METHOD'] == 'POST' ) { if( !$usersObj->db_is_admin( $form_data['id'] )) { $start = 0; $num = 999; $data_all = $usersObj->count_users( SCENARIOS_ID ); if( $data_all > 0 ) { $usersObj->get_all_user( $data ); } else { $err['user'] = "ユーザーが登録されていません。"; } $usersObj->get_users_csv( $data ); } } break; case 'form': $settings = $usersObj->get_settings(); $form_data['form_html'] = $usersObj->set_formadd( $settings['form_order_no'] ); if( empty( $form_data['form_html'] )){ $err['all'] = 'フォームテンプレートが設定されていません。'; } require_once( 'form.php'); break; case 'admin': $usersObj->get_auth_session( $_SESSION, $user ); $usersObj->db_set_user( $user['id'] ); $data = $usersObj->db_get_user(); $form_data['email'] = $data['email']; $form_data['password1'] = ''; $form_data['password2'] = ''; $form_data['id'] = $data['id']; require_once( 'edit_admin.php'); break; case 'admin_edit': if( $_SERVER['REQUEST_METHOD'] == 'POST' ) { $usersObj->check_mailadd( $form_data['email'] ); if( !empty( $form_data['password1'] )) { $usersObj->check_pw( $form_data['password1'] ); $usersObj->check_pw( $form_data['password2'] ); } $usersObj->check_double_pw( $form_data['password1'], $form_data['password2'] ); $err = $usersObj->get_err(); if( empty( $err )) { if( !empty( $form_data['password1'] )) { $form_data['password'] = sha1( $form_data['password1'] ); } else { $usersObj->get_auth_session( $_SESSION, $user ); $form_data['password'] = $user['password']; } $usersObj->db_update_admin( $form_data, $form_data['id'] ); $usersObj->set_auth_session( $form_data ); $form_data['password1'] = NULL; $form_data['password2'] = NULL; $form_data['password'] = NULL; $message = '管理者情報を更新しました。'; } require_once( 'edit_admin.php'); } break; default: if( $settings == FALSE ) { $err['all'] = "設定情報にエラーが見つかりました。恐れ入りますがもう一度基本設定をして下さい。"; } $data_all = $usersObj->count_users( SCENARIOS_ID ); if( $data_all > 0 ) { $usersObj->get_all_user( $data ); } else { $err['user'] = "ユーザーが登録されていません。"; } $form_data['status'] = 'default'; require_once( 'list.php' ); break; } ?>